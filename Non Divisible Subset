

        Map<Integer, Long> map = s.stream().distinct()
                .collect(Collectors.groupingBy(v -> v % k, Collectors.counting()));

        List<Integer> res = map.keySet().stream().collect(Collectors.toList());

        Long result = 0l;
        
        if (map.getOrDefault(0, 0l) > 0) {
            result++;
        }

        for (int i = 0; i < res.size(); i++) {
            if (res.get(i) != 0) {
                int key = res.get(i);
                int oKey = k - key;
                if (key == oKey) {
                    result++;
                } else {
                    if (map.get(key) >= map.getOrDefault(oKey, 0l)) {
                        result += map.get(key);
                    } else {
                        result += map.getOrDefault(oKey, 0l);
                    }
                    map.replace(key, 0l);
                    map.replace(oKey, 0l);
                }
            }
        }
        return result.intValue();
